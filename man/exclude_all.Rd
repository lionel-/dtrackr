% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trackr.R
\name{exclude_all}
\alias{exclude_all}
\title{Exclude all items matching a criteria}
\usage{
exclude_all(
  .data,
  ...,
  .headline = "{.strata}",
  na.rm = FALSE,
  .type = "exclusion",
  .asOffshoot = TRUE
)
}
\arguments{
\item{.data}{- a dataframe which may be grouped}

\item{...}{- a dplyr filter specification as a formula where the RHS is a glue specification, defining the message. This can refer to grouping variables
variables from the environment and {.excluded} and {.matched} or {.missing} (excluded = matched+missing), {.count} and {.total} - group and overall counts respectively, e.g. "excluding {.matched} items and {.missing} with missing values".}

\item{.headline}{- a glue specification which can refer to grouping variables of .data, or any variables defined in the calling environment}

\item{na.rm}{- (default FALSE) if the filter cannot be evaluated for a row count that row as missing and either exclude it (TRUE) or don't exclude it (FALSE)}

\item{.type}{- default "exclusion": used to define formatting}

\item{.asOffshoot}{- do you want this comment to be an offshoot of the main flow (default = TRUE).}
}
\value{
the filtered .data dataframe with the history graph updated
}
\description{
Apply a set of filters and dplyr::summarise the actions of the filter to the trackr history graph
Because of the ... filter specification, all parameters MUST BE NAMED.
The filters work in an additive manner, i.e. the results excluding all things that match any of the criteria.
If na.rm = TRUE they also remove anything that cannot be evaluated by a criteria.
}
\examples{
iris \%>\%
   p_exclude_all(
      Petal.Length > 5 ~ "{.excluded} long ones",
      Petal.Length < 2 ~ "{.excluded} short ones"
   ) \%>\%
   p_get()
}
