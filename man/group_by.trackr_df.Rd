% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dtrackr.R
\name{group_by.trackr_df}
\alias{group_by.trackr_df}
\title{Stratifying your analysis}
\usage{
\method{group_by}{trackr_df}(
  .data,
  ...,
  .add = FALSE,
  .drop = dplyr::group_by_drop_default(.data),
  .messages = "stratify by {.cols}",
  .headline = NULL
)
}
\arguments{
\item{.data}{- a dataframe which may be grouped}

\item{...}{a set of dplyr column expressions.}

\item{.add}{When \code{FALSE}, the default, \code{group_by()} will
override existing groups. To add to the existing groups, use
\code{.add = TRUE}.

This argument was previously called \code{add}, but that prevented
creating a new grouping variable called \code{add}, and conflicts with
our naming conventions.}

\item{.drop}{Drop groups formed by factor levels that don't appear in the
data? The default is \code{TRUE} except when \code{.data} has been previously
grouped with \code{.drop = FALSE}. See \code{\link[dplyr:group_by_drop_default]{group_by_drop_default()}} for details.}

\item{.messages}{- a set of glue specs. The glue code can use any global variable, or \{.cols\} which is the columns that are being grouped by.}

\item{.headline}{- a headline glue spec. The glue code can use any global variable, or \{.cols\}.}
}
\value{
the .data but grouped.
}
\description{
Grouping a data set acts in the normal way.
}
\examples{
iris \%>\% p_group_by(Species, .messages="stratify by {.cols}") \%>\% p_comment("{.strata}") \%>\% p_get()
}
