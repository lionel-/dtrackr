% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dtrackr.R
\name{group_modify.trackr_df}
\alias{group_modify.trackr_df}
\title{Group-wise modification of data and complex operations}
\usage{
\method{group_modify}{trackr_df}(
  .data,
  .f,
  ...,
  .keep = FALSE,
  .messages = NULL,
  .headline = .defaultHeadline(),
  .type = "modify"
)
}
\arguments{
\item{.data}{- a dataframe which may be grouped}

\item{.f}{a function as expected by dplyr::group_modify e.g. function(d,g,...) { ...do something with d and return a dataframe... }}

\item{...}{additional parameters for .f.}

\item{.keep}{- are the grouping variables kept in d, or split out to g (the default)}

\item{.messages}{- a set of glue specs. The glue code can use any global variable, or \{.strata\},\{.count.in\},and \{.count.out\}}

\item{.headline}{- a headline glue spec. The glue code can use any global variable, or \{.strata\},\{.count.in\},and \{.count.out\}}

\item{.type}{- default "modify": used to define formatting}
}
\value{
the transformed .data.
}
\description{
Group modifying a data set acts in the normal way. The internal mechanics of the modify function are opaque to the history.
This means these can be used to wrap any unsupported operation without losing the history (e.g. `df %>% track() %>% group_modify(function(d,...) { d %>% unsupported_operation() })` )
Prior to the operation the size of the group is calculated \{.count.in\} and
after the operation the output size \{.count.out\}
The group \{.strata\} is also available (if grouped) for reporting
}
\examples{
iris \%>\%
   p_track() \%>\%
   p_group_by(Species) \%>\%
   p_group_modify(
      function(d,g,...) { return(tibble::tibble(x=runif(10))) },
      .messages="{.count.in} in, {.count.out} out"
   ) \%>\%
   p_get()
}
